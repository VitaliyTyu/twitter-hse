import type { Post } from "@prisma/client";
import Head from "next/head";
import Image from "next/image";
// import Link from "next/link";
import { useState } from "react";
import { api } from "~/utils/api";

interface PostViewProps {
  post: Post;
}
const PostView = ({ post }: PostViewProps) => {
  return (
    <div className="flex items-center gap-3 border border-b-2 border-slate-200 p-4">
      <Image
        className="min-h-14 min-w-14 rounded-full blur"
        src={""}
        alt="Logo"
        height={56}
        width={56}
      />
      <div>
        <div>
          <span>Name</span>
          <span>{` Â· 6 minutes ago`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

interface CreatePostWizardProps {
  handleCreatePost: (content: Post) => void;
}
const CreatePostWizard = ({ handleCreatePost }: CreatePostWizardProps) => {
  const [input, setInput] = useState("");

  return (
    <div className="flex items-center gap-3 border border-b-2 border-slate-200 p-4">
      <Image
        className="min-h-14 min-w-14 rounded-full blur"
        src={""}
        alt="Logo"
        height={56}
        width={56}
      />
      <input
        type="text"
        className="w-full bg-transparent outline-none"
        placeholder="Type some text"
        value={input}
        onChange={(e) => {
          setInput(e.target.value);
        }}
        onKeyDown={(e) => {
          if (input !== "" && e.key === "Enter") {
            e.preventDefault();
            handleCreatePost({ content: input } as Post);
            setInput("");
          }
        }}
      ></input>
      <button
        disabled={input === ""}
        onClick={() => {
          if (input !== "") {
            handleCreatePost({ content: input } as Post);
            setInput("");
          }
        }}
        className="p-4"
      >
        Post
      </button>
    </div>
  );
};

export default function Home() {
  // const [posts, setPosts] = useState<Post[]>([]);

  // useEffect(() => {
  //   const fetchPosts = async () => {
  //     try {
  //       const response = await fetch("api/posts");
  //       const result = await response.json();
  //       setPosts(result);
  //     } catch (e) {
  //       console.error("Error fetching posts", e);
  //     }
  //   };

  //   fetchPosts();
  // }, []);

  // const handleCreatePost = async (post: Post) => {
  //   try {
  //     console.log(JSON.stringify(post));
  //     const response = await fetch("/api/posts", {
  //       method: "POST",
  //       headers: {
  //         ContentType: "application/json",
  //       },
  //       body: JSON.stringify(post),
  //     });

  //     if (response.ok) {
  //       setPosts([post, ...posts]);
  //     } else {
  //       console.error("Error createing post", response.statusText);
  //     }
  //   } catch (e) {
  //     console.error("Error createing post", e);
  //   }
  // };

  const hello = api.posts.hello.useQuery({ text: "Vitaliy" });

  console.log(hello.data);

  if (hello.isLoading) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center bg-gradient-to-b from-[#d6b6ff9d] to-[#3842ff6c]">
        <div className="flex h-full w-full flex-col border-x-2 border-slate-200 md:max-w-2xl">
          <p>{hello.data?.greeting}</p>

          {/* <CreatePostWizard handleCreatePost={handleCreatePost} />
          <div className="flex grow flex-col overflow-y-scroll">
            {posts.map((post, index) => (
              <PostView post={post} key={index} />
            ))}
          </div> */}
        </div>
      </main>
    </>
  );
}
